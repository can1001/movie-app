{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\zionyul\\\\Documents\\\\GitHub\\\\movie-app\\\\src\\\\Movie.js\",\"C:\\\\Users\\\\zionyul\\\\Documents\\\\GitHub\\\\movie-app\\\\src\\\\App.js\",\"C:\\\\Users\\\\zionyul\\\\Documents\\\\GitHub\\\\movie-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\zionyul\\\\Documents\\\\GitHub\\\\movie-app\\\\src\\\\index.js\"],\"names\":[\"Movie\",\"react_default\",\"a\",\"createElement\",\"className\",\"Movie_MoviePoster\",\"poster\",\"this\",\"props\",\"title\",\"Component\",\"MoviePoster\",\"src\",\"width\",\"App\",\"state\",\"_renderMovies\",\"_this\",\"movies\",\"map\",\"movie\",\"src_Movie_0\",\"large_cover_image\",\"key\",\"id\",\"_getMovies\",\"_callee\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"_callApi\",\"sent\",\"setState\",\"stop\",\"fetch\",\"then\",\"potato\",\"json\",\"data\",\"catch\",\"err\",\"console\",\"log\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"ySAKMA,gMAUE,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACE,EAAD,CAAaC,OAAQC,KAAKC,MAAMF,SAChCL,EAAAC,EAAAC,cAAA,KAAA,KAAKI,KAAKC,MAAMC,eAbZC,EAAAA,YAmBdC,mLAQE,OACIV,EAAAC,EAAAC,cAAA,MAAA,CAAKS,IAAKL,KAAKC,MAAMF,OAAQO,MAAM,eATrBH,EAAAA,WAcXV,EAAAA,ECQAc,6MAtCbC,MAAQ,KAORC,cAAgB,WAId,OAHeC,EAAKF,MAAMG,OAAOC,IAAI,SAAAC,GACnC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,CAAOZ,MAAOW,EAAMX,MAAOH,OAAQc,EAAME,kBAAmBC,IAAKH,EAAMI,UAKlFC,gCAAa,SAAAC,IAAA,IAAAR,EAAA,OAAAS,EAAAzB,EAAA0B,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACUd,EAAKe,WADf,KAAA,EACLd,EADKW,EAAAI,KAEXhB,EAAKiB,SAAS,CACZhB,OAAAA,IAHS,KAAA,EAAA,IAAA,MAAA,OAAAW,EAAAM,SAAAT,QAObM,SAAW,WACT,OAAOI,MAAM,yDACZC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKtB,SACvBuB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,yFArB1BnC,KAAKkB,8CAyBL,OACExB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACZG,KAAKQ,MAAMG,OAASX,KAAKS,gBAAkB,kBAnClCN,EAAAA,WCQEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpB,KAAK,SAAAqB,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport PropTypes from 'prop-types';\\nimport './Movie.css';\\n\\n\\nclass Movie extends Component {\\n\\n    static propTypes = {\\n        title: PropTypes.string.isRequired,\\n        poster: PropTypes.string.isRequired\\n    }\\n\\n\\n    render() {\\n        // console.log(this.props);\\n        return (\\n            <div className=\\\"Movie\\\">\\n                <MoviePoster poster={this.props.poster}></MoviePoster>\\n                <h1>{this.props.title}</h1>\\n            </div>\\n        );\\n    }\\n}\\n\\nclass MoviePoster extends Component {\\n\\n    static propTypes ={\\n        poster: PropTypes.string.isRequired\\n    }\\n    \\n    render() {\\n        // console.log(this.props);\\n        return(\\n            <img src={this.props.poster} width=\\\"150\\\"></img>\\n        );\\n    }\\n}\\n\\nexport default Movie;\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport Movie from './Movie.js';\\n\\nclass App extends Component {\\n  // Render: componentWillMount() -> render() -> componentDidMount()\\n  // Update: componentWillReceiveProps() -> shouldComponentUpdate() -> componentWillUpdate() -> rener() -> componentDidUpdate()\\n\\n  state = {\\n  }\\n\\n  componentDidMount() {\\n    this._getMovies()\\n  }\\n\\n  _renderMovies = () => {\\n    const movies = this.state.movies.map(movie => {\\n      return <Movie title={movie.title} poster={movie.large_cover_image} key={movie.id} />\\n    })\\n    return movies\\n  }\\n\\n  _getMovies = async () =>{\\n    const movies = await this._callApi()\\n    this.setState({\\n      movies\\n    })\\n  }\\n\\n  _callApi = () => {\\n    return fetch('https://yts.lt/api/v2/list_movies.json?sort_by=rating')\\n    .then(potato => potato.json())\\n    .then(json => json.data.movies)\\n    .catch(err => console.log(err))\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        {this.state.movies ? this._renderMovies() : 'Loading'}\\n      </div>\\n    );\\n  }\\n\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(20)},16:function(e,t,n){},18:function(e,t,n){},19:function(e,t,n){},20:function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n.n(r),a=n(8),i=n.n(a),c=(n(16),n(6)),s=n.n(c),u=n(9),l=n(1),p=n(2),h=n(4),m=n(3),f=n(5),v=(n(18),n(19),function(e){function t(){return Object(l.a)(this,t),Object(h.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(f.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"Movie\"},o.a.createElement(d,{poster:this.props.poster}),o.a.createElement(\"h1\",null,this.props.title))}}]),t}(r.Component)),d=function(e){function t(){return Object(l.a)(this,t),Object(h.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(f.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"img\",{src:this.props.poster,width:\"150\"})}}]),t}(r.Component),b=v,j=function(e){function t(){var e,n;Object(l.a)(this,t);for(var r=arguments.length,a=new Array(r),i=0;i<r;i++)a[i]=arguments[i];return(n=Object(h.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(a)))).state={},n._renderMovies=function(){return n.state.movies.map(function(e){return o.a.createElement(b,{title:e.title,poster:e.large_cover_image,key:e.id})})},n._getMovies=Object(u.a)(s.a.mark(function e(){var t;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n._callApi();case 2:t=e.sent,n.setState({movies:t});case 4:case\"end\":return e.stop()}},e)})),n._callApi=function(){return fetch(\"https://yts.lt/api/v2/list_movies.json?sort_by=rating\").then(function(e){return e.json()}).then(function(e){return e.data.movies}).catch(function(e){return console.log(e)})},n}return Object(f.a)(t,e),Object(p.a)(t,[{key:\"componentDidMount\",value:function(){this._getMovies()}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},this.state.movies?this._renderMovies():\"Loading\")}}]),t}(r.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(j,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,1,2]]]);","extractedComments":[]}